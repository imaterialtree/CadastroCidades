/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import dao.DaoCidade;
import model.Cidade;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class FrmCadCidade extends javax.swing.JInternalFrame {
    DaoCidade daocid = new DaoCidade();
    List<Cidade> listCidade = daocid.getCidades();
    int indice = 0;
    
    public FrmCadCidade() {
        initComponents();
        atualizarBotoes();
        if (! listCidade.isEmpty()) {
            preencherTabela();
            mostrarDadosTela(indice);
        }
        tabCidades.changeSelection(indice, 1, false, false);
    }
    
    private void mostrarDadosTela(int i) {
        if (listCidade.isEmpty()) {
            txtId.setText("");
            txtNome.setText("");
            cbxUf.setSelectedIndex(0);
            txtCep.setText("");
        } 
        else {
            txtId.setText(""+listCidade.get(i).id);
            txtNome.setText(listCidade.get(i).nome);
            cbxUf.setSelectedItem(listCidade.get(i).uf);
            txtCep.setText(listCidade.get(i).cep);
        }
    }
    
    private void atualizarBotoes() {
        btnPrevious.setEnabled(indice>0);
        btnFirst.setEnabled(indice>0);

        btnNext.setEnabled(indice<listCidade.size()-1);
        btnLast.setEnabled(indice<listCidade.size()-1);
        
        btnRemover.setEnabled(indice!=-1);
        btnEditar.setEnabled(indice!=-1);
    }
    
    private void preencherTabela() {
        
        DefaultTableCellRenderer cellRender = new DefaultTableCellRenderer();
	cellRender.setHorizontalAlignment(SwingConstants.CENTER);
        tabCidades.getColumnModel().getColumn(0).setPreferredWidth(10);  //Preferencia de largura medidad em pixels
        tabCidades.getColumnModel().getColumn(1).setPreferredWidth(100);  
        tabCidades.getColumnModel().getColumn(2).setPreferredWidth(10);  
        tabCidades.getColumnModel().getColumn(3).setPreferredWidth(100);
        for (int i=0; i<tabCidades.getColumnCount(); i++)
            tabCidades.getColumnModel().getColumn(i).setCellRenderer(cellRender);
        
        DefaultTableModel modelo = (DefaultTableModel) tabCidades.getModel();
        modelo.setNumRows(0);
        for (Cidade cid: listCidade) {
            modelo.addRow(new Object[]{
                cid.id, 
                cid.nome, 
                cid.uf, 
                cid.cep});
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNome = new javax.swing.JTextField();
        lblCadTitulo = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        cbxUf = new javax.swing.JComboBox<>();
        txtCep = new javax.swing.JFormattedTextField();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lblErro = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        scrollTabela = new javax.swing.JScrollPane();
        tabCidades = new javax.swing.JTable();

        setBackground(new java.awt.Color(122, 225, 227));
        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Cidades");

        txtNome.setBackground(new java.awt.Color(204, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "NOME", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N

        lblCadTitulo.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        lblCadTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadTitulo.setText("Cadastro de cidades");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(204, 255, 255));
        txtId.setToolTipText("");
        txtId.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N
        txtId.setEnabled(false);

        cbxUf.setBackground(new java.awt.Color(204, 255, 255));
        cbxUf.setForeground(new java.awt.Color(0, 153, 153));
        cbxUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecionar--", "AC", "AL ", "AP ", "AM ", "BA ", "CE ", "DF ", "ES ", "GO ", "MA ", "MT ", "MS ", "MG ", "PA ", "PB ", "PR ", "PE ", "PI ", "RJ ", "RN ", "RS ", "RO ", "RR ", "SC", "SP", "SE", "TO" }));
        cbxUf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "UF", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N

        txtCep.setBackground(new java.awt.Color(204, 255, 255));
        txtCep.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CEP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N
        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnSalvar.setBackground(new java.awt.Color(204, 255, 255));
        btnSalvar.setFont(new java.awt.Font("Quicksand Medium", 0, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(0, 153, 153));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/floppy_disk16x16.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(204, 255, 255));
        btnEditar.setFont(new java.awt.Font("Quicksand Medium", 0, 14)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 153, 153));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit16x16.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lblErro.setForeground(new java.awt.Color(255, 0, 51));

        btnRemover.setBackground(new java.awt.Color(204, 255, 255));
        btnRemover.setFont(new java.awt.Font("Quicksand Medium", 0, 14)); // NOI18N
        btnRemover.setForeground(new java.awt.Color(0, 153, 153));
        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/garbage_can.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(204, 255, 255));
        btnFirst.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(204, 255, 255));
        btnLast.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(204, 255, 255));
        btnPrevious.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnPrevious.setText("<<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(204, 255, 255));
        btnNext.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        scrollTabela.setBackground(new java.awt.Color(255, 255, 204));
        scrollTabela.setForeground(new java.awt.Color(0, 204, 204));

        tabCidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "UF", "CEP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabCidades.setShowGrid(false);
        tabCidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabCidadesMouseClicked(evt);
            }
        });
        tabCidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabCidadesKeyReleased(evt);
            }
        });
        scrollTabela.setViewportView(tabCidades);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(lblCadTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxUf, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCep, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblErro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(scrollTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblCadTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(cbxUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemover)
                            .addComponent(btnSalvar)
                            .addComponent(btnEditar)))
                    .addComponent(scrollTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        Cidade cid = new Cidade();
        
        cid.nome = txtNome.getText();
        cid.uf = (String) cbxUf.getSelectedItem();
        cid.cep = txtCep.getText();
        
        // CHECK REDUNDANCIA
        for (Cidade c: listCidade) {
            if (c.nome.equals(cid.nome) || c.cep.equals(cid.cep) || !c.nome.isEmpty() || !c.cep.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Esta cidade já está salva", "Atenção", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        //Não salva mais em lista, mas no banco de dados
        //listCidade.add(cid);
        daocid.addCidade(cid);      
        listCidade.clear();
        listCidade = daocid.getCidades();
        JOptionPane.showMessageDialog(this, "Cidade salva\nId: "+listCidade.get(listCidade.size()-1).id+"\nNome: "+cid.nome+"\nUF: "+cid.uf+"\nCep: "+cid.cep);
        
        indice = listCidade.size()-1;
        mostrarDadosTela(indice);
        preencherTabela();
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        Cidade cid = new Cidade();
        cid.id = Integer.parseInt(txtId.getText());
        cid.nome = txtNome.getText();
        cid.uf = (String) cbxUf.getSelectedItem();
        cid.cep = txtCep.getText();
        
        daocid.updateCidade(cid);
        
        JOptionPane.showMessageDialog(this, "Editado com sucesso", "Cidade editada", JOptionPane.INFORMATION_MESSAGE);
        listCidade.clear();
        listCidade = daocid.getCidades();
        preencherTabela();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (listCidade.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Não há cidades para serem excluídas", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (0 != JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir?", "Confirmação de exclusão", JOptionPane.WARNING_MESSAGE)) {
            JOptionPane.showMessageDialog(this, "Cidade não removida");
            return;
        }
        // else:
        int id = Integer.parseInt(txtId.getText());
        daocid.deleteCidade(id);
        
        JOptionPane.showMessageDialog(this, "Cidade excluída com sucesso", "Cidade excluida", JOptionPane.INFORMATION_MESSAGE);
        indice += indice>0 ? -1 : (listCidade.isEmpty() ? -1 : +0);
        
        listCidade.clear();
        listCidade = daocid.getCidades();
        mostrarDadosTela(indice);
        preencherTabela();
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
        
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        indice = 0;
        mostrarDadosTela(indice);
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        indice = listCidade.size()-1;
        mostrarDadosTela(indice);
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        mostrarDadosTela(--indice);
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        mostrarDadosTela(++indice);
        tabCidades.changeSelection(indice, 1, false, false);
        atualizarBotoes();
    }//GEN-LAST:event_btnNextActionPerformed

    private void tabCidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCidadesMouseClicked
        indice = tabCidades.getSelectedRow();
        mostrarDadosTela(indice);
        atualizarBotoes();
    }//GEN-LAST:event_tabCidadesMouseClicked

    private void tabCidadesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabCidadesKeyReleased
        indice = tabCidades.getSelectedRow();
        mostrarDadosTela(indice);
        atualizarBotoes();
    }//GEN-LAST:event_tabCidadesKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxUf;
    private javax.swing.JLabel lblCadTitulo;
    private javax.swing.JLabel lblErro;
    private javax.swing.JScrollPane scrollTabela;
    private javax.swing.JTable tabCidades;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
